<div>
    {{#commentDtos}}
    <div class="card m-2" id="comments-{{id}}">
        <div class="card-header">
            {{nickname}}
            <button type="button"
                    class="btn btn-sm btn-outline-primary"
                    data-bs-toggle="modal"
                    data-bs-target="#comment-edit-modal"
                    data-bs-id="{{id}}"
                    data-bs-nickname="{{nickname}}"
                    data-bs-body="{{body}}"
                    data-bs-articleId="{{articleId}}">수정</button>
            <button type="button"
                    class="btn btn-sm btn-outline-danger comment-delete-btn"
                    data-comment-id="{{id}}">삭제</button>
        </div>
        <div class="card-body">
            <blockquote class="blockquote mb-0">
                <p>{{body}}</p>
            </blockquote>
        </div>
    </div>
    {{/commentDtos}}

    <!-- Button trigger modal -->

    <!-- Modal -->
    <div class="modal fade" id="comment-edit-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">댓글 수정</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <!-- 닉네임 -->
                        <div class="mb-3">
                            <label for="nickname" class="form-label">닉네임</label>
                            <input class="form-control" id="edit-nickname">
                        </div>
                        <!-- 댓글 -->
                        <div class="mb-3">
                            <label for="body" class="form-label">댓글</label>
                            <textarea rows="3" class="form-control" id="edit-body"></textarea>
                        </div>
                        <!-- 전송 버튼 -->
                        <button type="submit" id="comment-update-btn" class="btn btn-primary">댓글 작성</button>

                        <!-- 히든 인풋 -->
                        {{#article}}
                            <input type="hidden" id="edit-article-id">
                            <input type="hidden" id="edit-id">
                        {{/article}}
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- 모달 이벤트 처리 -->
<script>
{
    // 모달 요소 선택
    const commentEditModal = document.querySelector("#comment-edit-modal");
    // 모달 이벤트 감지
    commentEditModal.addEventListener("show.bs.modal", function(event) {
        // 트리거 버튼 선택
        const triggerBtn = event.relatedTarget;
        // 데이터 가져오기
        const id = triggerBtn.getAttribute("data-bs-id");
        const nickname = triggerBtn.getAttribute("data-bs-nickname");
        const body = triggerBtn.getAttribute("data-bs-body");
        const articleId = triggerBtn.getAttribute("data-bs-articleId");

        // 데이터 반영
        document.querySelector("#edit-nickname").value = nickname;
        document.querySelector("#edit-body").value = body;
        document.querySelector("#edit-id").value = id;
        document.querySelector("#edit-article-id").value = articleId;
    });
}

{
    // 수정 완료 버튼
    const commentUpdateBtn = document.querySelector("#comment-update-btn");

    // 클릭 이벤트 감지 및 처리
    commentUpdateBtn.addEventListener("click", function() {
        // 수정 댓글 객체 생성
        const comment = {
            id: document.querySelector("#edit-id").value,
            nickname: document.querySelector("#edit-nickname").value,
            body: document.querySelector("#edit-body").value,
            article_id: document.querySelector("#edit-article-id").value
        };
        console.log(comment);
        // 수정 REST API 호출 - fetch()
        const url = "http://localhost:8080/api/comments/" + comment.id;
        console.log(url);
        fetch(url, {
            method: "PATCH",
            body: JSON.stringify(comment),
            headers: {
                "Content-Type": "application/json"
            }
        }).then(response => {
            // http 응답 코드에 따른 메시지 출력
            const msg = (response.ok) ? "댓글이 수정 되었습니다." : "댓글 수정 실패";
            alert(msg);
            // 현재 페이지를 새로고침
            window.location.reload();
        });
    });
}
</script>

<!-- 댓글 삭제 -->
<script>
{
    // 삭제 버튼 선택
    const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");

    // 삭제 버튼 이벤트를 처리
    commentDeleteBtns.forEach(btn => {
        btn.addEventListener("click", (event) => {
            // 이벤트 발생 요소를 선택 (버튼)
            const commentDeleteBtn = event.srcElement;

            // 삭제 댓글 id 가져오기
            const commentId = commentDeleteBtn.getAttribute("data-comment-id");
            console.log(`삭제 버튼 클릭: ${commentId}번 댓글`); // 삭제 버튼 클릭: " + commentId + "번 댓글";

            // 삭제 api 호출 및 처리
            const url = `/api/comments/${commentId}`;
            fetch(url, {
                method: "DELETE",
            }).then(response => {
                // 댓글 삭제 실패 처리
                if (!response.ok) {
                alert("댓글 삭제 실패");
                return;
                }

                // 삭제 성공 시, 댓글을 화면에서 지움!
                // window.location.reload();
                const target = document.querySelector(`#comments-${commentId}`);
                target.remove();

            });
        });
    });
}
</script>
